---swagger: '2.0'info:  version: 2.0.1  title: Upodi API  description: This documentation is for v2.0 of Upodi API. The URLs listed in this documentation are relative to https://api.upodi.io/v2.host: api.upodi.iobasePath: /v2# schemesschemes:  - https# media typesconsumes:  - application/jsonproduces:  - application/json# pathspaths:  /customers:    get:      summary: Get list of all customers.      description: Returns a list of customers. | Requires API scope 'read'.      operationId: ListCustomer      tags:       - customer      security:        - Bearer: []      responses:        200:          description: OK          schema:            type: array            items:              $ref: '#/definitions/Customer'    post:      summary: Create a customer.      description: |         Creates a new customer and returns the id of the newly created object.         #### API Token scope        * write.      operationId: CreateCustomer      tags:      - customer      security:        - Bearer: []      parameters:        - name: customer          in: body          required: true          schema:            $ref: '#/definitions/Customer'      responses:        201:          description: Created. Body contains the id of the newly created object.    put:      summary: Update a customer.      description: |         Updates an existing customer.         #### API Token scope        * write.      operationId: UpdateCustomer      tags:      - customer      security:        - Bearer: []      parameters:        - name: customer          in: body          required: true          schema:            $ref: '#/definitions/Customer'      responses:        204:          description: No content.  /customers/{id}:    get:      tags:      - customer      parameters:      - name: id        in: path        description: ID of customer        required: true        type: string      description: Return single customer.      security:        - Bearer: []      responses:        200:          description: OK          schema:            type: object            items:              $ref: '#/definitions/Customer'    delete:      tags:      - customer      parameters:      - name: id        in: path        description: ID of customer        required: true        type: string      description: Deletes a known customer.      security:        - Bearer: []      responses:        204:          description: No content.  /customers/{id}/assigncardtoken/:    put:      summary: Assigns a card.      description: |         Assigns a card to a customer and maps it as a payment method.        #### API Token scope        * write.      operationId: AssignCardToken      tags:      - customer      - creditcard      security:        - Bearer: []      parameters:      - name: id        in: path        description: ID of customer        required: true        type: string      - name: cardToken        in: body        required: true        schema:          $ref: '#/definitions/CardToken'      responses:        204:          description: No content.  /subscriptions:    get:      tags:      - subscription      description: Returns a list of subscriptions. Requires API scope 'read'.      security:        - Bearer: []      responses:        200:          description: OK# securitysecurityDefinitions:  #ApiKey:  #  type: apiKey  #  in: header  #  name: Authentication  #  description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'  Bearer:    type: apiKey    name: Authorization    in: header    description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'.definitions:  Customer:    type: object    required:    - id    - fullname    properties:      id:        type: string      fullname:        type: string  CardToken:    type: object    properties:      token:        type: string        
