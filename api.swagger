# define
swagger: '2.0'
info:
  version: 2.5.1
  title: Upodi API
  description: This documentation is for v4.0 of Upodi API. The URLs listed in this documentation are relative to https://api.upodi.io/v2.
host: api.upodi.io
basePath: /v2
# schemes
schemes:
  - https
# media types
consumes:
  - application/json
produces:
  - application/json
# paths
paths:
#
# customer calls
#
  /customers:
    get:
      summary: /customers/
      description: | 
        Returns an array of customers.
        ##### API Token scope
        * READ.
      operationId: ListCustomer
      tags: 
      - customer
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
    post:
      summary: /customers/
      description: | 
        Creates a customer and return the id. 
        ##### API Token scope
        * WRITE.
      operationId: CreateCustomer
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        201:
          description: Created. Body contains the id of the newly created object.
          schema:
            $ref: '#/definitions/CreatedResponse'
        400:
          description: Bad request. Invalid fields of object.
        422:
          description: Dublicate. Check accountnumber.
        500:
          description: General service error.
    put:
      summary: /customers/
      description: |
        Update an existing customer.
        #### API Token scope
        * WRITE.
      operationId: UpdateCustomer
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        204:
          description: No content. Customer updated.
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
  /customers/{id}:
    get:
      summary: /customers/:id
      description: Return a single customer. Requires API scope 'read'.
      tags:
      - customer
      parameters:
      - name: id
        in: path
        description: ID of customer. Guid or UUID.
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Malformed request.
        404:
          description: Not found. No object of id.
        500:
          description: General service error.
    delete:
      summary: /customers/:id
      description: Delete a single customer. Requires API scope 'write'.
      tags:
      - customer
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        204:
          description: No content.
  /customers/{id}/paymentmethods/:
    get:
      summary: /customers/:id/paymentmethods
      description: Return a list of payment method ids. Requires API scope 'read'.
      tags:
      - customer
      - paymentmethod
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentMethod'
        404:
          description: Not found. No object of id.
        500:
          description: General service error.
  /customers/{id}/invoices:
    get:
      summary: /customers/:id/invoices
      description: Return a list of invoice ids as a string array. Requires API scope 'read'.
      tags:
      - customer
      - invoice
      parameters:
      - name: id
        in: path
        description: ID of customer.  Guid or UUID.
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
            example: ["guid", "guid", "guid"]
        404:
          description: Not found. No object of id.
        500:
          description: General service error.
  /customers/{accountnumber}/accountnumber/:
    get:
      summary: customers/{accountNumber}/accountnumber
      description: Get a customer based on the account number
      operationId: GetCustomerByCustomerNumber
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
      - name: accountnumber
        in: path
        description: Account number of customer
        required: true
        type: string
      responses:
        200:
          description: Customer object.
        404:
          description: Not found.
  /customers/{refkey}/refkey/:
    get:
      summary: customers/{accountNumber}/refkey
      description: Get a customer based on the reference key
      operationId: GetCustomerByRefkey
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
      - name: refkey
        in: path
        description: Reference key
        required: true
        type: string
      responses:
        200:
          description: Customer object.
        404:
          description: Not found.
  /customers/{paymentMethodId}/validatepaymentmethod/:
    get:
      summary: customers/:paymentMethodId/validatepaymentmethod/
      description: Validates an associated payment method of a customer.
      operationId: ValidatePaymentMethod
      tags:
      - customer
      - paymentmethod
      security:
        - Bearer: []
      parameters:
      - name: paymentMethodId
        in: path
        description: Guid.
        required: true
        type: string
      responses:
        200:
          description: True or false in body.
        404:
          description: Not found.
  /customers/{id}/assigncardtoken/:
    put:
      summary: /customers/:id/assigncardtoken
      description: Assigns a card to a customer and maps it as a payment method. Requires API scope 'write'.
      operationId: AssignCardToken
      tags:
      - customer
      - creditcard
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of customer. Guid or UUID.
        required: true
        type: string
      - name: cardToken
        in: body
        required: true
        schema:
          $ref: '#/definitions/CardToken'
      responses:
        204:
          description: No content.
  /customers/{id}/setdefaultpaymentmethod/:
    put:
      summary: /customers/:id/setdefaultpaymentmethod
      description: Assigns a default payment method. Requires API scope 'write'.
      operationId: SetDefaultPaymentMethod
      tags:
      - customer
      - creditcard
      - paymentmethod
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      - name: paymentmethodid
        in: body
        required: true
        schema: 
           type: string
      responses:
        204:
          description: No content.
#
# discount calls
#
  /discounts:
    get:
      summary: /discounts/
      description: Returns a list of discounts. Requires API scope 'read'.
      operationId: GetDiscounts
      tags:
      - discount
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Discount'
    put:
      summary: /discounts/
      description: Updates a discount. Requires API scope 'write'.
      operationId: Putdiscounts
      tags:
        - discount
      security:
        - Bearer: []
      parameters:
        - name: discount
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscountCreate'
      responses:
        200:
          description: Updated.
        404:
          description: Not found.
    post:
      summary: /discounts/
      description: Creates a discount. Requires API scope 'write'. The type has to be 0, as for now we donâ€™t have other discount type but 0 is meant as default percentage type discount.
      operationId: CreateDiscounts
      tags:
      - discount
      security:
        - Bearer: []
      parameters:
        - name: discount
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscountCreate'
      responses:
        200:
          description: OK
  /discounts/{id}:
    get:
      summary: /discounts/:id
      description: Returns a single discounts. Requires API scope 'read'.
      operationId: GetDiscountsById
      tags:
      - discount
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of discount.  Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: Discount object.
        404:
          description: Not found.
    delete:
      summary: /discounts/:id
      description: Deletes discount using its id.
      tags:
      - discount
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of discount.  Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: Discount deleted.
        201:
          description: Discount deleted.
        404:
          description: Not found.
  /discounts/{id}/applydiscountcodecustomer:
    put:
      summary: /discounts/:id/applydiscountcodecustomer
      description: Applies a discount to a customer. Requires API scope 'write'.
      operationId: ApplyDiscountCodeCustomer
      tags:
      - discount
      - customer
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of customer.
        required: true
        type: string
      - name: discountcode
        description: Discount code (string).
        in: body
        schema:
          type: string
          description: Discount code (string).
        required: true
      responses:
        204:
          description: Discount appled.
        404:
          description: Not found.
  /discounts/{id}/applydiscountcodesubscription:
    put:
      summary: /discounts/:id/applydiscountcodesubscription
      description: Applies a discount to a subscription. Requires API scope 'write'.
      operationId: ApplyDiscountCodeSubscription
      tags:
      - discount
      - customer
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      - name: discountcode
        description: Discount code (string).
        in: body
        schema:
          type: string
          description: Discount code (string).
        required: true
      responses:
        204:
          description: Discount appled.
        404:
          description: Not found.
  /discounts/{id}/applydiscountcodesubscriptioncharge:
    put:
      summary: /discounts/:id/applydiscountcodesubscriptioncharge
      description: Applies a discount to a subscription charge. Requires API scope 'write'.
      operationId: ApplyDiscountCodeSubscriptionCharge
      tags:
      - discount
      - customer
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription charge.
        required: true
        type: string
      - name: discountcode
        description: Discount code (string).
        in: body
        schema:
          type: string
          description: Discount code (string).
        required: true
      responses:
        204:
          description: Discount appled.
        404:
          description: Not found.
  /discounts/{id}/cleardiscountcodecustomer:
    delete:
      summary: /discounts/:id/cleardiscountcodecustomer
      description: Clear a discount from a customer. Requires API scope 'write'.
      operationId: ClearDiscountCodeCustomer
      tags:
      - discount
      - customer
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of customer. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: Discount removed.
        404:
          description: Not found.
  /discounts/{id}/cleardiscountcodesubscription:
    delete:
      summary: /discounts/:id/cleardiscountcodesubscription
      description: Clear a discount from a subscription. Requires API scope 'write'.
      operationId: ClearDiscountCodeSubscription
      tags:
      - discount
      - customer
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription.
        required: true
        type: string
      responses:
        204:
          description: Discount removed.
        404:
          description: Not found.
  /discounts/{id}/generatediscountcodes:
    put:
      summary: /discounts/:id/generatediscountcodes
      description: Generates a list of discount codes.
      operationId: GenerateDiscountCodes
      tags:
        - discount
        - discountcode
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: Id of discount to create codes under.
        required: true
        type: integer
      - name: discountCode
        in: body
        required: true
        schema:
          $ref: '#/definitions/GenerateDiscountCode'
      responses:
        200:
          description: OK
  /discounts/{id}/discountcodes:
    get:
      summary: /discounts/:id/discountcodes/
      description: Retrieves a list of discount codes of a discount.
      operationId: ListDiscountCodes
      tags:
        - discount
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of discount.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiscountCode'
  /discounts/discountcode:
    delete:
      summary: /discounts/discountcode/
      description: Deletes a discount code if not in use or already consumed.
      operationId: DeleteDiscountCode
      tags:
      - discount
      security:
        - Bearer: []
      parameters:
      - name: discountcode
        description: Discount code (string).
        in: body
        schema:
          type: string
          description: Discount code (string), without curly {}.
        required: true
      responses:
        200:
          description: Discount code removed.
        204:
          description: Discount code removed.
        400:
          description: Discount code is in use and cannot be removed or body is empty.
        404:
          description: Discount code not found.      
#
# payment methods calls
#
  /paymentmethods/:
    get:
      summary: /paymentmethods/
      description: Returns a list of payment method. Requires API scope 'read'.
      tags:
      - paymentmethod
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentMethod'
  /paymentmethods/{id}/:
    get:
      summary: /paymentmethods/:id
      description: Returns a payment method by id. Requires API scope 'read'.
      tags:
      - paymentmethod
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of payment method. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentMethod'
  /paymentmethods/{customerid}/bycustomer/:
    get:
      summary: /paymentmethods/:customerid/bycustomer
      description: Returns a paymenthod by customer id. Requires API scope 'read'.
      tags:
      - paymentmethod
      security:
        - Bearer: []
      parameters:
      - name: customerid
        in: path
        description: ID of customer. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentMethod'
  /paymentmethods/{customerid}:
    post:
      summary: /paymentmethods/:customerid/
      description: Created a new payment method on a customer. Requires API scope 'write'.
      operationId: PostPaymentMethod
      tags:
      - paymentmethod
      security:
        - Bearer: []
      parameters:
      - name: customerid
        in: path
        description: ID of customer. Guid or UUID.
        required: true
        type: string
      - name: paymentMethod
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreatePaymentMethod'
      responses:
        201:
          description: Created. Body contains the id of the newly created object.
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
#
# subscription calls
#
  /subscriptions:
    get:
      summary: /subscriptions/
      description: Returns a list of subscriptions. Requires API scope 'read'.
      operationId: GetSubscription
      tags:
      - subscription
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscription'
    post:
      summary: /subscriptions/
      description: Creates a new subscription. Subscriptions need to be activated before being active. Requires API scope 'write'.
      operationId: CreateSubscription.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Subscription'
      responses:
        201:
          description: Created. Body contains the id of the newly created object.
          schema:
            $ref: '#/definitions/CreatedResponse'
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
  /subscriptions/{id}:
    get:
      summary: /subscriptions/:id
      description: Get a subscription based on the id. Requires API scope 'read'.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Subscription'
  /subscriptions/{id}/setamount/:
    put:
      summary: /subscriptions/:id/setamount/
      description: Sets quantity on all subscription charges or the one with specific productplanchargeid.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      - name: setamountbody
        in: body
        description: Sets quantity on all subscription charges or the one with specific productplanchargeid
        schema:
          $ref: '#/definitions/SubscriptionSetAmountRequest'
      responses:
        204:
          description: No content.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/activate/:
    put:
      summary: /subscriptions/:id/activate
      description: Activate a newly created subscription.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: No content.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/switchplan/:
    put:
      summary: /subscriptions/:id/switchplan
      description: Switch a subscription plan from one to another.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      - name: toplan
        in: body
        description: The new id of the product plan to switch to.
        schema:
          type: string
        required: true
      responses:
        204:
          description: No content, but succesful switched.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/cancel/:
    put:
      summary: /subscriptions/:id/cancel
      description: |
        Cancels an active subscription. 
        #### API Token scope
        * WRITE.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: No content. subscription updated.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/resume/:
    put:
      summary: /subscriptions/:id/resume
      description: |
        Resume a hold subscription. 
        #### API Token scope
        * WRITE.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: No content. subscription resumed.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/hold/:
    put:
      summary: /subscriptions/:id/hold
      description: |
        Holds an active subscription. 
        #### API Token scope
        * WRITE.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: No content. subscription updated.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/expire/:
    put:
      summary: /subscriptions/:id/expire
      description: |
        Expire an active subscription. 
        #### API Token scope
        * WRITE.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription. Guid or UUID.
        required: true
        type: string
      responses:
        204:
          description: No content. subscription updated.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
#
# subscription charges calls
#
  /subscriptionCharges:
    get:
      summary: /subscriptioncharges/
      description: Returns a list of subscription charges. Requires API scope 'read'.
      operationId: GetSubscriptionCharges
      tags:
      - subscriptioncharge
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SubscriptionCharge'
  /subscriptionCharges/{id}:
    get:
      summary: /subscriptioncharges/:id
      description: Get a subscriptioncharge based on the id. Requires API scope 'read'.
      operationId: GetSubscriptionCharge
      tags:
      - subscriptioncharge
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription charge. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SubscriptionCharge'
    put:
      summary: /subscriptioncharges/:id
      description: Update the most current subscription charge of id.
      operationId: UpdateSubscriptionCharge
      tags:
      - subscriptioncharge
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription charge. Guid or UUID.
        required: true
        type: string
      - name: updatecharge
        in: body
        schema:
          $ref: '#/definitions/SubscriptionChargeUpdateRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SubscriptionCharge'
  /subscriptionCharges/{id}/setamount/:
    put:
      summary: /subscriptioncharges/:id/setamount/
      description: Set the amount of a subscription charge. Requires API scope 'write'.
      operationId: PutSubscriptionChargeAmount
      tags:
      - subscriptioncharge
      parameters:
      - name: id
        in: path
        description: ID of subscription charge. Guid or UUID.
        required: true
        type: string
      - name: newAmount
        in: body
        description: The new amount in decimal.
        schema:
          type: number
        required: true
      security:
        - Bearer: []
      responses:
        204:
          description: OK
  /subscriptionCharges/{id}/hold/:
    put:
      summary: /subscriptioncharges/:id/hold/
      description: Hold a given subscription charge.
      operationId: PutSubscriptionChargeHold
      tags:
      - subscriptioncharge
      - subscription
      parameters:
      - name: id
        in: path
        description: ID of subscription charge. Guid or UUID.
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        204:
          description: OK
#
# time calls
#
  /time:
    get:
      summary: /time/
      description: Returns the current time of the server. Requires API scope 'read'.
      operationId: GetTime
      tags:
      - time
      security:
        - Bearer: []
      responses:
        200:
          description: OK
# invoice calls
#
  /invoices:
    get:
      summary: /invoices/
      description: Returns a list of invoices. Requires API scope 'read'.
      operationId: ListInvoices
      tags:
      - invoice
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Invoice'
  /invoices/{id}:
    get:
      summary: /invoices/:id
      description: Get a invoice based on the id. Requires API scope 'read'.
      operationId: GetInvoice
      tags:
      - invoice
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of invoice
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Invoice'
  /invoices/{id}/getpdfwithid:
    get:
      summary: /invoices/:id/getpdfwithid
      description: Get a invoice based on the id. Requires API scope 'read'. To retrieve a file download please provide content-type 'application/pdf'.
      operationId: GetInvoicePdfById
      tags:
      - invoice
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of invoice
        required: true
        type: string
      responses:
        200:
          description: OK. File content of PDF.
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by id, or there is not e-mail template defined.
        500:
          description: General service error.
  /invoices/{invoicenumber}/getpdfwithinvoicenumber:
    get:
      summary: /invoices/:invoicenumber/getpdfwithinvoicenumber
      description: Get a invoice based on the invoice number. Requires API scope 'read'. To retrieve a file download please provide content-type 'application/pdf'.
      operationId: GetInvoicePdfByNumber
      tags:
      - invoice
      security:
        - Bearer: []
      parameters:
      - name: invoicenumber
        in: path
        description: Invoice number of the invoice.
        required: true
        type: string
      responses:
        200:
          description: OK. File content of PDF.
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by invoice number, or there is not e-mail template defined.
        500:
          description: General service error.
  /invoices/{invoicenumber}/number/:
    get:
      summary: /invoices/:invoicenumber/number
      description: Get a invoice based on the invoice number. Requires API scope 'read'.
      operationId: GetInvoiceByNumber
      tags:
      - invoice
      security:
        - Bearer: []
      parameters:
      - name: invoicenumber
        in: path
        description: Invoice number of invoice
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Invoice'
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by id.
        500:
          description: General service error.
  /invoices/{id}/markpaid/:
    put:
      summary: /invoices/:id/markpaid/
      description: |
        Mark an invoice as paid.
        #### API Token scope
        * WRITE.
      operationId: PutInvoicePaid
      tags:
      - invoice
      parameters:
      - name: id
        in: path
        description: ID of invoice. Guid or UUID.
        required: true
        type: string
      - name: date
        in: body
        description: Date upon the invoice was paid.
        schema:
          type: string
          description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
        required: true
      security:
        - Bearer: []
      responses:
        204:
          description: OK. Invoice paid.
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by id.
        500:
          description: General service error.
  /invoices/{id}/cancel/:
    put:
      summary: /invoices/:id/cancel/
      description: |
        Mark an invoice as cancelled.
        #### API Token scope
        * WRITE.
      operationId: PutInvoiceCancel
      tags:
      - invoice
      parameters:
      - name: id
        in: path
        description: ID of invoice. Guid or UUID.
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        204:
          description: OK. Invoice cancelled.
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by id.
        500:
          description: General service error.
  /invoices/{id}/recharge/:
    put:
      summary: /invoices/:id/recharge/
      description: |
        Recharge a failed payment of an invoice.
        #### API Token scope
        * WRITE.
      operationId: PutInvoiceRecharge
      tags:
      - invoice
      parameters:
      - name: id
        in: path
        description: ID of invoice. Guid or UUID.
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        204:
          description: OK. Invoice cancelled.
        400:
          description: Bad request.
        404:
          description: Not found. No invoice by id.
        500:
          description: General service error.
#
# product plan calls
#
  /productplans:
    get:
      summary: /productplans/
      description: Returns a list of product plans. Requires API scope 'read'.
      operationId: ListProductPlans
      tags: 
      - productplan
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPlan'
  /productplans/{id}:
    get:
      summary: /productplans/:id
      description: Get a product plan based on the id. Requires API scope 'read'.
      tags:
      - productplan
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of product plan. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductPlan'
  /productplans/{id}/duplicate:
    post:
      summary: /productplans/:id/duplicate
      description: Dublicate a product plan. Requires API scope 'write'.
      operationId: DublicateProductPlan
      tags:
      - productplan
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of product plan. Guid or UUID.
        required: true
        type: string
      responses:
        201:
          description: Created. Returns the UUID/guid of the new productplan.
#
# transactions calls
#
  /transactions:
    get:
      summary: /transactions/
      description: Returns a list of transactions. Requires API scope 'read'.
      operationId: ListTransactions
      tags:
      - transactions
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
  /transactions/{id}:
    get:
      summary: /transactions/:id/
      description: Get a transaction based on the id. Requires API scope 'read'.
      operationId: GetTransaction
      tags:
      - transactions
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of transaction. Guid or UUID.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
# security
securityDefinitions:
  #ApiKey:
  #  type: apiKey
  #  in: header
  #  name: Authentication
  #  description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'.
definitions:
  Activity:
    type: object
    properties:
      entity:
        type: object
      id:
        type: string
        description: Guid or UUID.
      entityid:
        type: string
        description: Guid or UUID.
      activitytype:
        type: integer
      status:
        type: integer
      description:
        type: string
      duedate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      recipient:
        type: string
      owner:
        type: string
        description: Guid or UUID. Allows null.
      createdby:
        type: string
        description: Guid or UUID. Allows null.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  CardToken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
      makedefault:
          type: integer
          description: boolean
  Currency:
    type: object
    properties:
      id:
        type: integer
      currencyname:
        type: string
      exchangerate:
        type: number
      currencyid:
        type: string
      isactive:
        type: integer
        description: boolean.
      customers:
        type: array
        items:
          $ref: '#/definitions/Customer'
  Customer:
    type: object
    required:
      - accountnumber
      - fullname
      - currencycode
    properties:
      accountnumber:
        type: string
        maxLength: 50
        description: Account number of customer.
      companyname:
        type: string
        maxLength: 50
        description: Company name field.
      companyvat:
        type: string
        maxLength: 50
        description: VAT field in syntax DK01234567
      fullname:
        type: string
        maxLength: 50
        description: Full name field.
      refkey:
        type: string
        maxLength: 50
        description: Reference key for integration.
      primaryemail:
        type: string
        maxLength: 250
        format: email
        description: E-mail of customer.
      currencycode:
        type: string
        maxLength: 5
        description: Syntax DKK, EUR. Must be enabled.
      autobill:
        type: boolean
        description: Boolean.
      paymentmethod:
        type: string
        description: Guid or UUID. Allows null.
      parentid:
        type: string
        description: Guid or UUID. Allows null.
      billtoparent:
        type: integer
        description: boolean
      homephone:
        type: string
        maxLength: 50
      businessphone:
        type: string
        maxLength: 50
      mobilephone:
        type: string
        maxLength: 50
      addressline1:
        type: string
        maxLength: 50
      addressline2:
        type: string
        maxLength: 50
      city:
        type: string
        maxLength: 50
      postalcode:
        type: string
        maxLength: 10
      country:
        type: string
        maxLength: 40
        description: Address country.
      county:
        type: string
        maxLength: 40
        description: Address county.
      state:
        type: string
        maxLength: 40
        description: Address state.
      note:
        type: string
        description: Note field for various information.
      defaultpaymentmethod:
        type: object
        description: PaymentMethod object.
      currency:
        type: object
      paymentterm:
        type: integer
        description: payment terms
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      invoices:
        type: array
        items:
          $ref: '#/definitions/Invoice'
      paymentmethods:
        type: array
        items:
          $ref: '#/definitions/PaymentMethod'
      subscriptioncharges:
        type: array
        items:
          $ref: '#/definitions/SubscriptionCharge'
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      activities:
        type: array
        items:
          $ref: '#/definitions/Activity'
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Discount:
    type: object
    properties:
      fullname:
        type: string
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  DiscountCode:
    type: object
    properties:
      id:
        type: string
        description: Guid or UUID.
      codeprefix:
        type: string
      code:
        type: string
      state:
        type: integer
        description: default 0.
      usecount:
        type: integer
        description: Number of times the code has been used.
      discountid:
        type: string
        description: Guid or UUID.
      redemption:
        type: integer
        description: Number of times the code can be used.
      completecode:
        type: string
        description: Full usable code of the discount code {prefix-code}
  CreatePaymentMethod:
    type: object
    properties:
      type: 
        type: integer
        description: Describes the type of the payment method to create. 8= creditcard, 64=pure token (external), 128=fi
      makedefault:
        type: boolean
        description: If set true the payment method will be set as default on the customer.
      puretoken:
        description: Optional. For use of 3rd party token gateways.
        $ref: '#/definitions/PureTokenObject'
      ls:
        description: Optional. LS object with properties. See LsObject.
        $ref: '#/definitions/LsObject'
      fi:
        description: Optional. FI object with property FiCustomerNumber as string.
        $ref: '#/definitions/FiObject'
      creditcard:
        description: Optional. Upodi token from upodi.js here.
        $ref: '#/definitions/CreditcardObject'
  LsObject:
    type: object
    properties:
      bankregnumber:
        type: string
        description: Required. bank registration number (example 9890).
      bankaccountnumber:
        type: string
        description: Required. Account number.
      cvrnumber:
        type: string
        description: Required. CVR number.
  CreditcardObject:
    type: object
    properties:
      cardtoken:
        type: string
        description: Optional. Upodi token from upodi.js here.
  FiObject:
    type: object
    properties:
      ficustomernumber:
        type: string
        description: Optional. FI customer number.
  PureTokenObject:
    type: object
    properties:
      token:
        type: string
        description: Required. Token in plain text.
      paymentgateway:
        type: string
        description: Required. Name of the payment gateway to use, example 'quickpay', 'epay', 'stripe' etc.
  EmailTemplate:
    type: object
    properties:
      fullname:
        type: string
      emailtemplatesetid:
        type: string
        description: Guid or UUID.
      emailtemplateset:
        type: object
      category:
        type: string
      subject:
        type: string
      isactive:
        type: integer
        description: Boolean.
      htmlbody:
        type: string
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  EmailTemplateSet:
    type: object
    properties:
      fullname:
        type: string
      isdefault:
        type: integer
        description: Boolean.
      sendername:
        type: string
      senderemail:
        type: string
      emailtemplates:
        type: array
        items:
          $ref: '#/definitions/EmailTemplate'
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Transaction:
    type: object
    properties:
      customerid:
        type: string
        description: Guid or UUID.
      invoiceid:
        type: string
        description: Guid or UUID. Allows null.
      statecode:
        type: integer
      status:
        type: integer
      type:
        type: integer
      totalamount:
        type: number
      currencycode:
        type: string
      paymentmethodid:
        type: string
        description: Guid or UUID. Allows null.
      paymentproviderid:
        type: string
        description: Guid or UUID. Allows null.
      customer:
        type: object
      paymentmethod:
        type: object
      paymentprovider:
        type: object
      invoice:
        type: object
      errorcode:
        type: integer
      gatewayreference:
        type: string
      gatewayresponse:
        type: string
      gatewayerrorcode:
        type: string
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  UoM:
    type: object
    properties:
      fullname:
        type: string
      pluralname:
        type: string
      status:
        type: integer
      isactive:
        type: integer
        description: Boolean.
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  DunningScheme:
    type: object
    properties:
      isdefault:
        type: integer
        description: Boolean.
      fullname:
        type: string
      retries:
        type: integer
      retryperiod:
        type: integer
      finalaction:
        type: integer
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Invoice:
    type: object
    properties:
      customerid:
        type: string
        description: Guid or UUID.
      subscriptionid:
        type: string
        description: Guid or UUID.
      currencycode:
        type: string
      invoicecounter:
        type: integer
        description: invoice counter.
      invoicenumeric:
        type: number
        description: numeric invoice number.
      total:
        type: number
        description: Currency.
      totalvat:
        type: number
        description: Currency.
      invoicedate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      duedate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      paymentdescriptor:
        type: string
        description: Description of the payment method used on the invoice.
      paymentdate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      paymentstatus:
        type: integer
      invoicenumber:
        type: string
        description: Text representation of invoice.
      subscription:
        type: object
      customer:
        type: object
      invoicelines:
        type: array
        items:
          $ref: '#/definitions/InvoiceLine'
      dunningschemeid:
        type: string
        description: Guid or UUID. Allows null.
      dunningscheme:
        type: object
      dunningstep:
        type: integer
        description: Allows null.
      externalfinance:
        type: string
        description: External ID of ERP integration.
      externalstatecode:
        type: integer
      refkey:
        type: string
        description: Used for integrational purposes. Custom track keys can be stored here.
      nextretry:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  InvoiceLine:
    type: object
    properties:
      description:
        type: string
      invoiceid:
        type: string
        description: Guid or UUID.
      subscriptionchargeid:
        type: string
        description: Guid or UUID.
      productplanchargeid:
        type: string
        description: Guid or UUID. Allows null.
      linenumber:
        type: integer
      quantity:
        type: number
      totalvat:
        type: number
        description: Currency.
      unitprice:
        type: number
        description: Currency.
      totalprice:
        type: number
        description: Currency.
      invoice:
        type: object
      subscriptioncharge:
        type: object
      productplancharge:
        type: object
      uomid:
        type: string
        description: Guid or UUID. Allows null.
      unit:
        type: string
      id:
        type: string
        description: Guid or UUID.
      totalpriceexchangerate:
        type: number
        description: Currency.
      totalpricebasecurrency:
        type: number
        description: Currency.
      periodstart:
        type: string
        description: Date RFC 3339 format. YYYY-MM-DDZ.
      periodend:
        type: string
        description: Date RFC 3339 format. YYYY-MM-DDZ.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  PaymentMethod:
    type: object
    properties:
      id:
        type: string
        description: Guid or UUID.
      fullname:
        type: string
      issuer:
        type: string
      customerid:
        type: string
        description: Guid or UUID.
      expirydate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      paymentmethodtype:
        type: integer
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      customer:
        type: object
      paymentdata:
        type: string
  PaymentProvider:
    type: object
    properties:
      fullname:
        type: string
      typename:
        type: string
      settings:
        type: string
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  ProductFamily:
    type: object
    properties:
      fullname:
        type: string
      productplans:
        type: array
        items:
          $ref: '#/definitions/ProductPlan'
      dunningschemeid:
        type: string
        description: Guid or UUID. Allows null.
      dunningscheme:
        type: object
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  ProductPlan:
    type: object
    properties:
      productfamilyid:
        type: string
        description: Guid or UUID. Allows null.
      sku:
        type: string
      fullname:
        type: string
      currencycode:
        type: string
      activecurrencies:
        type: string
      currencies:
        type: array
        items:
          type: string
      description:
        type: string
      status:
        type: integer
      productplancharges:
        type: array
        items:
          $ref: '#/definitions/ProductPlanCharge'
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      productfamily:
        type: object
      productplanpricings:
        type: array
        items:
          $ref: '#/definitions/ProductPlanChargePricing'
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  ProductPlanCharge:
    type: object
    properties:
      productplanid:
        type: string
        description: Guid or UUID.
      fullname:
        type: string
      invoicetext:
        type: string
      pricingmodel:
        type: integer
      chargetype:
        type: integer
      billingperiod:
        type: integer
      billingperiodinterval:
        type: integer
      billingperiodalignment:
        type: integer
      billingday:
        type: integer
        description: Allows null.
      defaultamount:
        type: number
      taxable:
        type: integer
        description: Boolean.
      productplan:
        type: object
      productplanchargepricings:
        type: array
        items:
          $ref: '#/definitions/ProductPlanChargePricing'
      subscriptioncharges:
        type: array
        items:
          $ref: '#/definitions/SubscriptionCharge'
      uom:
        type: object
      uomid:
        type: string
        description: Guid or UUID. Allows null.
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  ProductPlanChargePricing:
    type: object
    properties:
      productplanchargeid:
        type: string
        description: Guid or UUID.
      productplanid:
        type: string
        description: Guid or UUID. Allows null.
      segment:
        type: integer
      currencycode:
        type: string
      price:
        type: number
      tierfrom:
        type: integer
      tierto:
        type: integer
      tierpriceformat:
        type: integer
      productplancharge:
        type: object
      productplan:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Task:
    type: object
    properties:
      fullname:
        type: string
      isrecurrent:
        type: integer
        description: Boolean.
      taskdate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  TaxRule:
    type: object
    properties:
      fullname:
        type: string
      priority:
        type: integer
      country:
        type: string
      state:
        type: string
      ruletype:
        type: string
      taxpct:
        type: number
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  UserProfile:
    type: object
    properties:
      id:
        type: string
        description: Guid or UUID.
      fullname:
        type: string
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Webhook:
    type: object
    properties:
      fullname:
        type: string
      authenticitysecret:
        type: string
      url:
        type: string
      status:
        type: integer
      isactive:
        type: integer
        description: Boolean.
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  Subscription:
    type: object
    properties:
      customerid:
        type: string
        description: Guid or UUID.
      productplanid:
        type: string
        description: Guid or UUID.
      switchtoplanid:
        type: string
        description: Guid or UUID.
      subscriptionnumber:
        type: string
      autorenew:
        type: integer
        description: Boolean.
      statecode:
        type: integer
        description: 0=active, 1=renewing, 2=grace, 3=expired, 4=cancelled, 5=draft, 6=pendingending, 7=ended, 8=hold
      status:
        type: integer
        description: 1024=deleted, 7=inactive, 1=active, 0=draft.
      startdate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      enddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      lifetime:
        type: integer
      initialterminterval:
        type: integer
      initialtermperiod:
        type: integer
      initialterm:
        type: string
      renewalterminterval:
        type: integer
      renewaltermperiod:
        type: integer
      renewalterm:
        type: string
      refkey:
        type: string
      lastrenewaldate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      cancellationdate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      activationdate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      customer:
        type: object
      productplan:
        type: object
      subscriptioncharges:
        type: array
        items:
          $ref: '#/definitions/SubscriptionCharge'
      activities:
        type: array
        items:
          $ref: '#/definitions/Activity'
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
  GenerateDiscountCode:
    type: object
    properties:
      prefix:
        type: string
        description: Prefix of the discount code.
      amount:
        type: number
        description: Number of codes to create. Must be larger than 0.
      redemption:
        type: integer
      expirydate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
  DiscountCreate:
    type: object
    properties:
      id:
        type: string
        description: Guid or UUID. Required for update. Not valid for create.
      fullname:
        type: string
        description: Name of discount
      type:
        type: integer
        description: Type of discount. The type has to be 0
      amount:
        type: number
        description: Decimal of procentage, example 0.43 = 43%.
      invoicetext:
        type: string
        description: Text for invoice text.
  CreatedResponse:
    type: object
    properties:
      id:
        type: string
        description: guid
  SubscriptionChargeUpdateRequest:
    type: object
    properties:
      nextchargedate:
        type: string
        description: Optimal. Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null. If provided, next charge date will be set.
      quantity:
        type: number
        description: Optimal. New amount of charge. Allows null. If provided, the amount will be overwritten.
      description:
        type: string
        description: Optimal. Description of the charge.
      customprice:
        type: number
        description: Optimal. Decimal of custom pricing. If provided, custom pricing is applied. Set customprice to 0 to reset.
  SubscriptionSetAmountRequest:
      type: object
      properties:
        quantity:
          type: number
          description: Decimal of the new amount.
        productplanchargeid:
          type: string
          description: Guid or UUID. Spefiic id of productplancharge..
        all:
          type: boolean
          description: If specified true, will ignore productplanchargeid, and set quantity across all charges.
  SubscriptionCharge:
    type: object
    properties:
      amount:
        type: number
      nextchargedate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      previouschargedate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z. Allows null.
      subscription:
        type: object
      productplancharge:
        type: object
      customer:
        type: object
      subscriptionid:
        type: string
        description: Guid or UUID. Allows null.
      productplanchargeid:
        type: string
        description: Guid or UUID. Allows null.
      customerid:
        type: string
        description: Guid or UUID.
      unitprice:
        type: number
      currencycode:
        type: string
      description:
        type: string
      toggled:
        type: integer
        description: boolean. Set by Upodi.
      ismanual:
        type: integer
        description: Boolean.
      iscredit:
        type: integer
        description: Boolean.
      invoiceid:
        type: string
        description: Guid or UUID. Allows null.
      invoice:
        type: object
      statecode:
        type: integer
        description: draft=0,active=1,inactive=7,deleted=1024.
      createdby:
        type: string
        description: Guid or UUID.
      modifiedby:
        type: string
        description: Guid or UUID.
      createdbyuser:
        type: object
      modifiedbyuser:
        type: object
      id:
        type: string
        description: Guid or UUID.
      createddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
      modifieddate:
        type: string
        description: Date and time in RFC 3339 format. YYYY-MM-DDT23:59:60Z.
