# define
swagger: '2.0'
info:
  version: 2.1.1
  title: Upodi API
  description: This documentation is for v2.0 of Upodi API. The URLs listed in this documentation are relative to https://api.upodi.io/v2.
host: api.upodi.io
basePath: /v2
# schemes
schemes:
  - https
# media types
consumes:
  - application/json
produces:
  - application/json
# paths
paths:
#
# customer calls
#
  /customers:
    get:
      summary: /customers/.
      description: Returns a list of customers. | Requires API scope 'read'.
      operationId: ListCustomer
      tags: 
      - customer
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
    post:
      summary: /customers/.
      description: | 
        Creates a new customer and returns the id of the newly created object. 
        #### API Token scope
        * write.
      operationId: CreateCustomer
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        201:
          description: Created. Body contains the id of the newly created object.
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
    put:
      summary: /customers/.
      description: | 
        Updates an existing customer. 
        #### API Token scope
        * write.
      operationId: UpdateCustomer
      tags:
      - customer
      security:
        - Bearer: []
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        204:
          description: No content.
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
  /customers/{id}:
    get:
      summary: /customers/:id.
      description: Return single customer.
      tags:
      - customer
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        404:
          description: Not found. No object of id.
        500:
          description: General service error.
    delete:
      summary: /customers/:id.
      description: Delete a single customer based on the id of the customer. 
      tags:
      - customer
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      security:
        - Bearer: []
      responses:
        204:
          description: No content.
  /customers/{id}/assigncardtoken/:
    put:
      summary: Assigns a card.
      description: Assigns a card to a customer and maps it as a payment method. Requires API scope 'write'.
      operationId: AssignCardToken
      tags:
      - customer
      - creditcard
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of customer
        required: true
        type: string
      - name: cardToken
        in: body
        required: true
        schema:
          $ref: '#/definitions/CardToken'
      responses:
        204:
          description: No content.
#
# subscription calls
#
  /subscriptions:
    get:
      summary: List subscriptions.
      description: Returns a list of subscriptions. Requires API scope 'read'.
      operationId: GetSubscription
      tags:
      - subscription
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscription'
    post:
      summary: Create subscription.
      description: Creates a new subscription. Subscriptions need to be activated before being active.
      operationId: CreateSubscription.
      tags:
      - subscription
      security:
        - Bearer: []
      responses:
        201:
          description: Created. Body contains the id of the newly created object.
        400:
          description: Bad request. Invalid fields of object.
        500:
          description: General service error.
  /subscriptions/{id}:
    get:
      summary: Get a subscription.
      description: Get a subscription based on the id. Requires API scope 'read'.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Subscription'
  /subscriptions/{id}/activate/:
    put:
      summary: Activate a subscription.
      description: Activate a newly created subscription.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription
        required: true
        type: string
      responses:
        204:
          description: No content.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
  /subscriptions/{id}/cancel/:
    put:
      summary: Cancels a subscription.
      description: Cancels an active subscription.
      tags:
      - subscription
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of subscription
        required: true
        type: string
      responses:
        204:
          description: No content.
        400:
          description: Bad request.
        404:
          description: Not found.
        500:
          description: General service error.
#
# invoice calls
#
  /invoices:
    get:
      summary: List invoices
      description: Returns a list of invoices. Requires API scope 'read'.
      operationId: ListInvoices
      tags:
      - invoice
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Invoice'
#
# product plan calls
#
  /productplans:
    get:
      summary: List product plans.
      description: Returns a list of product plans. Requires API scope 'read'.
      operationId: ListProductPlans
      tags: 
      - productplan
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPlan'
  /productplans/{id}:
    get:
      summary: Get a product plan.
      description: Get a product plan based on the id. Requires API scope 'read'.
      tags:
      - productplan
      security:
        - Bearer: []
      parameters:
      - name: id
        in: path
        description: ID of product plan
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductPlan'
# security
securityDefinitions:
  #ApiKey:
  #  type: apiKey
  #  in: header
  #  name: Authentication
  #  description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Key must be Base64 encoded. Syntax 'Bearer {apiKey}'.
definitions:
  Customer:
    type: object
    required:
    - id
    - fullname
    - accountnumber
    properties:
      id:
        type: string
        description: Guid or UUID
      accountnumber:
        type: string
      companyname:
        type: string
      companyvat:
        type: string
      fullname:
        type: string
      refkey:
        type: string
      primaryemail:
        type: string
      homephone:
        type: string
        description: Maximum 50 characters in length.
      businessphone:
        type: string
        description: Maximum 50 characters in length.
      mobilephone:
        type: string
        description: Maximum 50 characters in length.
      currencycode:
        type: string
        description: 3-letter ISO 4217 code for currency of the customer.
      autobill:
        type: boolean
      addressline1:
        type: string
      addressline2:
        type: string
      city:
        type: string
      postalcode:
        type: string
      county:
        type: string
      state:
        type: string
      country:
        type: string
      createddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
      modifieddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
  Subscription:
    type: object
    required:
    - id
    - customerid
    properties:
      id:
        type: string
      customerid:
        type: string
      productplanID:
        type: string
      subscriptionnumber:
        type: string
      autorenew:
        type: boolean
      startdate:
        type: string
      createddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
      modifieddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
  ProductPlan:
    type: object
    required:
    - id
    - fullname
    properties:
      id:
        type: string
      fullname:
        type: string
  Invoice:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      createddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
      modifieddate:
        type: string
        description: date & time in format YYYY-MM-DD HH:MM:SST0
  CardToken:
    type: object
    properties:
      token:
        type: string
